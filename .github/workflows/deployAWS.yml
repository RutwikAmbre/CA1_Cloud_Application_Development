name: "Deploy to AWS EC2"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install RuboCop and run checks
        run: |
          gem install rubocop
          rubocop

      - name: Install Brakeman and run security scan
        run: |
          gem install brakeman
          brakeman

      - name: Cache Ruby gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Set up SSH key for EC2 access
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: SSH into EC2 and deploy
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > keyPair.pem

          EC2_INSTANCE_IP="54.85.241.65"
          EC2_USER="ubuntu"
          PEM_KEY_PATH="keyPair.pem"

          chmod 600 $PEM_KEY_PATH

          ssh -o StrictHostKeyChecking=no -i $PEM_KEY_PATH $EC2_USER@$EC2_INSTANCE_IP << 'EOF'
            set -e

            sudo fuser -k 3000/tcp || true

            sudo ufw allow 22
            sudo ufw allow 3000
            sudo ufw reload

            export RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}

            cd /home/ubuntu/CA1_Cloud_Application_Development || exit
            git pull origin main || exit

            bundle install || exit
            RAILS_ENV=production rails assets:clobber
            RAILS_ENV=production rails tmp:clear

            pg_dump -U username dbname > /path/to/backup.sql

            RAILS_ENV=production bundle exec rails db:migrate || exit

            RAILS_ENV=production bundle exec rails server --binding 0.0.0.0 --port 3000 || exit

            sudo systemctl restart puma || exit

            sudo systemctl status puma
          EOF
